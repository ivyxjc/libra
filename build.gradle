plugins {
    id 'java'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version '1.3.70' apply false
    id "org.springframework.boot" version '2.1.6.RELEASE' apply false
    id "me.champeau.gradle.jmh" version "0.4.8" apply false
    id "io.freefair.aspectj.post-compile-weaving" version "5.0.0-rc6" apply false
    id "io.freefair.aspectj" version "5.0.0-rc6" apply false
    id "io.morethan.jmhreport" version "0.9.0" apply false
}

ext {
    base_version = '0.0.1-SNAPSHOT'

    kotlin_version = '1.3.70'

    aspectj_version = '1.9.5'
    commons_lang3_version = '3.7'
    druid_version = '1.1.20'
    druid_starter_version = '1.1.20'
    gson_version = '2.8.5'
    guava_version = '27.0.1-jre'
    h2_version = '1.4.197'
    hibernate_version = '5.4.0.Final'
    jmh_version = '1.21'
    jms_version = '2.0.1'
    junit_version = '4.12'
    kafka_client_version = '2.3.0'
    log4j_slf4j_version = '2.11.2'
    lombok_version = '1.18.4'
    mockito_kotlin_version = '1.6.0'
    mockito_version = '2.23.4'
    mybatis_version = '3.5.2'
    mybatis_spring_version = "2.0.2"
    mybatis_starter_version = '2.1.0'
    mybatis_version = '3.5.2'
    okhttp_version = '4.0.1'
    slf4j_version = '1.7.25'
    snakeyaml_version = '1.23'
    spring_version = '5.1.9.RELEASE'
    spring_boot_version = '2.1.8.RELEASE'
    spring_kafka_version = '2.2.7.RELEASE'
}


configure(allprojects) { project ->
    group = 'com.ivyxjc'
    version base_version

    apply plugin: 'java'
    apply plugin: 'maven-publish'
    if (name != 'libra-aspect') {
        apply plugin: 'org.jetbrains.kotlin.jvm'
    }

    sourceCompatibility = JavaVersion.VERSION_11

    repositories {
        mavenLocal()
        maven { url 'https://maven.aliyun.com/repository/central' }
        mavenCentral()
    }

    buildDir = "${rootProject.projectDir.path}/build/${rootProject.name}/${project.name}"

    if (name == 'libra-core-mock-biz') {
        sourceSets.main.resources.srcDirs += "${rootProject.projectDir.path}/src/main/resources"
    }

    sourceSets.test.resources.srcDirs += "${rootProject.projectDir.path}/src/test/resources"

    task sourceJar(type: Jar) {
        from sourceSets.main.allSource
        archiveClassifier = 'sources'
    }

    task fatJar(type: Jar) {
        baseName = project.name
        print(configurations)
        from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
        with jar
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java

                artifact sourceJar {
                    classifier "sources"
                }
            }
        }
    }

    compileJava {
        sourceCompatibility = JavaVersion.VERSION_11// can be switched to 11 for testing
        targetCompatibility = JavaVersion.VERSION_11
        options.encoding = "UTF-8"
    }

    compileTestJava {
        sourceCompatibility = JavaVersion.VERSION_11  // can be switched to 11 for testing
        targetCompatibility = JavaVersion.VERSION_11
        options.encoding = "UTF-8"
        options.compilerArgs += "-parameters"
    }

    compileKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
            freeCompilerArgs = ["-Xjsr305=strict"]
        }
    }

    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
            freeCompilerArgs = ["-Xjsr305=strict"]
        }
    }

    configurations {
        all*.exclude group: 'ch.qos.logback', module: 'logback-core'
        all*.exclude group: 'ch.qos.logback', module: 'logback-classic'
        all*.exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
    }

    dependencies {
        testImplementation group: 'junit', name: 'junit', version: junit_version
        testImplementation(group: 'org.mockito', name: 'mockito-core', version: mockito_version) {
            exclude group: "org.hamcrest", module: "hamcrest-core"
        }
        testImplementation(group: 'com.nhaarman', name: 'mockito-kotlin', version: mockito_kotlin_version) {
            exclude module: "kotlin-stdlib"
            exclude module: "kotlin-reflect"
            exclude module: "mockito-core"
        }

        //kotlin
        implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: kotlin_version
        implementation group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: kotlin_version
        //apache
        implementation group: 'org.apache.commons', name: 'commons-lang3', version: commons_lang3_version
        //log
        implementation group: 'org.slf4j', name: 'slf4j-api', version: slf4j_version
        runtimeOnly group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: log4j_slf4j_version

        //guava
        implementation group: 'com.google.guava', name: 'guava', version: guava_version

        compileOnly group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'
        testCompileOnly group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'
    }
}

project("libra-aspect") {
    apply plugin: 'io.freefair.aspectj'

    dependencies {
        compileOnly project(":libra-core-common")
        compileOnly group: 'org.aspectj', name: 'aspectjweaver', version: aspectj_version
    }
}

project("libra-core") {
    apply plugin: 'io.freefair.aspectj.post-compile-weaving'

    sourceSets.main.java.srcDirs += ["src/transmission-api/java", "src/transmission-api/kotlin"]
    sourceSets.main.java.srcDirs += ["src/transformation-api/java", "src/transformtion-api/kotlin"]
    sourceSets.main.java.srcDirs += ["src/remediation-api/java", "src/remediation-api/kotlin"]

    configurations {
        compile.exclude group: 'org.springframework', module: 'spring-core'
        compile.exclude group: 'org.springframework', module: 'spring-messaging'
    }

    compileJava.ajc.options.compilerArgs += "-showWeaveInfo"
    compileKotlin.ajc.options.compilerArgs += "-showWeaveInfo"
//    compileJava.ajc.options.compilerArgs += "-verbose"
//    compileKotlin.ajc.options.compilerArgs += "-verbose"
    compileJava.ajc.options.compilerArgs += "-Xlint:ignore"
    compileKotlin.ajc.options.compilerArgs += "-Xlint:ignore"

    dependencies {
        compileOnly project(":libra-aspect")
        compileOnly group: 'org.aspectj', name: 'aspectjtools', version: aspectj_version

        implementation project(":libra-core-common")


        implementation group: 'org.yaml', name: 'snakeyaml', version: '1.25'

        implementation group: 'com.google.protobuf', name: 'protobuf-java', version: '3.9.1'

        implementation group: 'javax.jms', name: 'javax.jms-api', version: jms_version

        compileOnly group: 'org.mybatis', name: 'mybatis', version: '3.5.2'

        compileOnly group: 'javax.jms', name: 'javax.jms-api', version: '2.0.1'
        compileOnly group: 'org.apache.activemq', name: 'artemis-jms-client', version: '2.10.0'
        compileOnly(group: 'org.apache.activemq', name: 'activemq-client', version: '5.15.10') {
            exclude group: "org.apache.geronimo.specs", module: "geronimo-jms_1.1_spec"
        }
        compileOnly(group: 'org.springframework', name: 'spring-tx', version: spring_version)
        compileOnly(group: 'org.springframework', name: 'spring-jms', version: spring_version)

        testImplementation group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '2.1.0'
        testImplementation group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-test-autoconfigure', version: '2.1.0'
        testImplementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.17'
        testImplementation group: 'com.zaxxer', name: 'HikariCP', version: '3.4.0'

        testImplementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '1.3.1'

        testImplementation group: 'org.apache.activemq', name: 'artemis-jms-client', version: '2.10.0'
        testImplementation(group: 'org.apache.activemq', name: 'activemq-client', version: '5.15.10') {
            exclude group: "org.apache.geronimo.specs", module: "geronimo-jms_1.1_spec"
        }
        testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: spring_boot_version

    }
}

project("libra-core-mock-biz") {
    apply plugin: 'io.freefair.aspectj.post-compile-weaving'
    apply plugin: "org.springframework.boot"

    compileJava.ajc.options.compilerArgs += "-showWeaveInfo"
    compileKotlin.ajc.options.compilerArgs += "-showWeaveInfo"
//    compileJava.ajc.options.compilerArgs += "-verbose"
//    compileKotlin.ajc.options.compilerArgs += "-verbose"
    compileJava.ajc.options.compilerArgs += "-Xlint:ignore"
    compileKotlin.ajc.options.compilerArgs += "-Xlint:ignore"

    dependencies {
//        aspect project(":libra-aspect")
//        inpath project(":libra-core")
//        inpath(group: 'org.springframework', name: 'spring-tx', version: spring_version)
//        inpath(group: 'org.springframework', name: 'spring-jms', version: spring_version)
//        inpath(group: 'org.apache.activemq', name: 'artemis-jms-client', version: '2.10.0')
        implementation project(":libra-core")
        implementation project(":libra-starter-jms")
        implementation project(":libra-starter-config")

        implementation group: 'org.springframework.boot', name: 'spring-boot-autoconfigure', version: spring_boot_version
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter', version: spring_boot_version
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: spring_boot_version

        implementation group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '2.1.0'
        implementation group: 'org.springframework', name: 'spring-jms', version: spring_version
        implementation group: 'org.springframework', name: 'spring-aspects', version: spring_version

        implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.17'

        implementation group: 'com.zaxxer', name: 'HikariCP', version: '3.4.0'
        implementation group: 'org.springframework', name: 'spring-context', version: spring_version
        implementation group: 'javax.jms', name: 'javax.jms-api', version: '2.0.1'
        implementation group: 'org.apache.activemq', name: 'artemis-jms-client', version: '2.10.0'
        implementation(group: 'org.apache.activemq', name: 'activemq-client', version: '5.15.10') {
            exclude group: "org.apache.geronimo.specs", module: "geronimo-jms_1.1_spec"
        }
    }
}


project("libra-benchmark") {

    apply plugin: "me.champeau.gradle.jmh"
    apply plugin: "io.morethan.jmhreport"

    jmhReport {
        jmhResultPath = project.file("${rootProject.projectDir.path}/build/${rootProject.name}/${project.name}/reports/jmh/results.json")
        jmhReportOutput = project.file("${rootProject.projectDir.path}/build/${rootProject.name}/${project.name}/reports/jmh/")
    }

    jmh {
        fork = 1
        threads = 1
        warmupIterations = 3
        iterations = 5
        resultFormat = 'JSON'
    }

    dependencies {
        implementation project(":libra-core-common")

        implementation group: 'org.openjdk.jmh', name: 'jmh-core', version: '1.21'
        implementation group: 'javax.jms', name: 'javax.jms-api', version: '2.0.1'
        implementation group: 'org.apache.activemq', name: 'artemis-jms-client', version: '2.10.0'
        implementation(group: 'org.apache.activemq', name: 'activemq-client', version: '5.15.10') {
            exclude group: "org.apache.geronimo.specs", module: "geronimo-jms_1.1_spec"
        }

        //log
        implementation group: 'org.slf4j', name: 'slf4j-api', version: slf4j_version
        runtimeOnly group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: log4j_slf4j_version
    }
}

project("libra-starter-config") {

    dependencies {
        implementation project(":libra-core")
        implementation project(":libra-core-common")

        implementation group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: kotlin_version

        // jaxb starts
        implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
        runtimeOnly group: 'org.glassfish.jaxb', name: 'jaxb-runtime', version: '2.3.2'
        // jaxb ends

        compileOnly group: 'javax.jms', name: 'javax.jms-api', version: jms_version
        compileOnly group: 'org.springframework', name: 'spring-jms', version: spring_version
        compileOnly group: 'org.springframework', name: 'spring-aspects', version: spring_version

        compileOnly group: 'org.springframework.boot', name: 'spring-boot', version: spring_boot_version
        compileOnly group: 'org.springframework.boot', name: 'spring-boot-autoconfigure', version: spring_boot_version
//        compileOnly group: 'org.springframework', name: 'spring-core', version: spring_version

        compileOnly group: 'org.springframework', name: 'spring-context', version: spring_version
        //spring-boot-starer contains this lib
        compileOnly group: 'org.yaml', name: 'snakeyaml', version: snakeyaml_version

//        implementation group: 'org.apache.activemq', name: 'artemis-jms-client', version: '2.10.0'
//        implementation group: 'org.springframework', name: 'spring-jms', version: spring_version
//        implementation group: 'javax.jms', name: 'javax.jms-api', version: jms_version

        testImplementation group: 'org.yaml', name: 'snakeyaml', version: snakeyaml_version


    }
}


project("libra-starter-jms") {

    dependencies {
        implementation project(":libra-core")
        implementation project(":libra-core-common")

        implementation group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: kotlin_version

        compileOnly group: 'org.springframework', name: 'spring-context', version: spring_version
        compileOnly group: 'org.springframework', name: 'spring-jms', version: spring_version
        compileOnly group: 'javax.jms', name: 'javax.jms-api', version: jms_version
        //spring-boot-starer contains this lib
        compileOnly group: 'org.yaml', name: 'snakeyaml', version: snakeyaml_version

//        implementation group: 'org.apache.activemq', name: 'artemis-jms-client', version: '2.10.0'
//        implementation group: 'org.springframework', name: 'spring-jms', version: spring_version
//        implementation group: 'javax.jms', name: 'javax.jms-api', version: jms_version

        testImplementation group: 'org.apache.activemq', name: 'artemis-jms-client', version: '2.10.0'
        testImplementation group: 'org.springframework', name: 'spring-jms', version: spring_version
        testImplementation group: 'javax.jms', name: 'javax.jms-api', version: jms_version
        testImplementation group: 'org.yaml', name: 'snakeyaml', version: snakeyaml_version
    }
}


